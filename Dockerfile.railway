# Railway Dockerfile for production deployment
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build:prod

# Production stage
FROM nginx:alpine

# Install envsubst for environment variable substitution
RUN apk add --no-cache gettext

# Copy built app to nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy simplified nginx config
COPY nginx.simple.conf /etc/nginx/nginx.conf

# Set default port for Railway
ENV PORT=8080

# Create startup script with dynamic port replacement and debugging
RUN echo '#!/bin/sh' > /startup.sh && \
    echo 'echo "Environment variables:"' >> /startup.sh && \
    echo 'env | grep -E "(PORT|RAILWAY)"' >> /startup.sh && \
    echo 'echo "Starting with PORT=$PORT"' >> /startup.sh && \
    echo 'if [ -z "$PORT" ]; then export PORT=8080; fi' >> /startup.sh && \
    echo 'echo "Using PORT=$PORT"' >> /startup.sh && \
    echo 'sed -i "s/listen 0.0.0.0:8080;/listen 0.0.0.0:$PORT;/" /etc/nginx/nginx.conf' >> /startup.sh && \
    echo 'echo "Nginx config listen directive:"' >> /startup.sh && \
    echo 'grep "listen" /etc/nginx/nginx.conf' >> /startup.sh && \
    echo 'echo "Testing nginx config:"' >> /startup.sh && \
    echo 'nginx -t' >> /startup.sh && \
    echo 'nginx -g "daemon off;"' >> /startup.sh && \
    chmod +x /startup.sh

# Expose port
EXPOSE $PORT

# Start nginx with environment variable substitution
CMD ["/startup.sh"]